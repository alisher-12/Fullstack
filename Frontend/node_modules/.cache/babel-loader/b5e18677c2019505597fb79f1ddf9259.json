{"ast":null,"code":"var _jsxFileName = \"/Users/alisher/Downloads/Northwind Full Stack/Frontend/src/Components/HomeArea/BestSeller/BestSeller.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./BestSeller.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BestSeller() {\n  _s();\n\n  //...\n  // Create best seller name as a component state: \n  const nameArr = useState(); // 1. call useState and get an array - always having only two items.\n\n  const bestSellerName = nameArr[0]; // 2. Take first value from array - this is the state variable.\n\n  const setBestSellerName = nameArr[1]; // 3. Take second value from array - this is a function for changing the state + rerendering the component.\n  //... AJAX...\n  // Create best seller items as a component state (using destructuring assignment): \n\n  const [bestSellerItems, setBestSellerItems] = useState(); //...\n\n  function showBestSeller() {\n    // Demo for getting the best seller supplier from the backend\n    // Change the state + rerender the component:\n    setBestSellerName(\"Exotic Liquids\");\n    setBestSellerItems(17);\n  } //...\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BestSeller Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showBestSeller,\n      children: \"Show Best Seller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Best Seller Name: \", bestSellerName, \", Total Items: \", bestSellerItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BestSeller, \"G9TgDNSqNK+v8a5iE4pLAmnEEwo=\");\n\n_c = BestSeller;\nexport default BestSeller;\n\nvar _c;\n\n$RefreshReg$(_c, \"BestSeller\");","map":{"version":3,"names":["useState","BestSeller","nameArr","bestSellerName","setBestSellerName","bestSellerItems","setBestSellerItems","showBestSeller"],"sources":["/Users/alisher/Downloads/Northwind Full Stack/Frontend/src/Components/HomeArea/BestSeller/BestSeller.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./BestSeller.css\";\n\nfunction BestSeller(): JSX.Element {\n\n    //...\n\n    // Create best seller name as a component state: \n    const nameArr = useState<string>(); // 1. call useState and get an array - always having only two items.\n    const bestSellerName = nameArr[0]; // 2. Take first value from array - this is the state variable.\n    const setBestSellerName = nameArr[1]; // 3. Take second value from array - this is a function for changing the state + rerendering the component.\n\n    //... AJAX...\n\n    // Create best seller items as a component state (using destructuring assignment): \n    const [bestSellerItems, setBestSellerItems] = useState<number>();\n\n    //...\n\n    function showBestSeller(): void { // Demo for getting the best seller supplier from the backend\n\n        // Change the state + rerender the component:\n        setBestSellerName(\"Exotic Liquids\");\n        setBestSellerItems(17);\n\n    }\n\n    //...\n\n    return (\n        <div className=\"BestSeller Box\">\n            <button onClick={showBestSeller}>Show Best Seller</button>\n            <span>Best Seller Name: {bestSellerName}, Total Items: {bestSellerItems}</span>\n        </div>\n    );\n}\n\nexport default BestSeller;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,kBAAP;;;AAEA,SAASC,UAAT,GAAmC;EAAA;;EAE/B;EAEA;EACA,MAAMC,OAAO,GAAGF,QAAQ,EAAxB,CAL+B,CAKK;;EACpC,MAAMG,cAAc,GAAGD,OAAO,CAAC,CAAD,CAA9B,CAN+B,CAMI;;EACnC,MAAME,iBAAiB,GAAGF,OAAO,CAAC,CAAD,CAAjC,CAP+B,CAOO;EAEtC;EAEA;;EACA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,EAAtD,CAZ+B,CAc/B;;EAEA,SAASO,cAAT,GAAgC;IAAE;IAE9B;IACAH,iBAAiB,CAAC,gBAAD,CAAjB;IACAE,kBAAkB,CAAC,EAAD,CAAlB;EAEH,CAtB8B,CAwB/B;;;EAEA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACI;MAAQ,OAAO,EAAEC,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,iCAAyBJ,cAAzB,qBAAwDE,eAAxD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GAhCQJ,U;;KAAAA,U;AAkCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}